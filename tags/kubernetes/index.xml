<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Evan&#39;s Notes</title>
    <link>https://evanap.com/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Evan&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Aug 2020 09:26:14 +0700</lastBuildDate>
    
	<atom:link href="https://evanap.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying prow</title>
      <link>https://evanap.com/posts/deploying-prow/</link>
      <pubDate>Sun, 09 Aug 2020 09:26:14 +0700</pubDate>
      
      <guid>https://evanap.com/posts/deploying-prow/</guid>
      <description>Prow is a CI/CD system used in the Kubernetes repositories, and many more. It&amp;rsquo;s known for the ChatOps feature (at least to me) which I think found very cool. I decided to give it a try myself and see it in action.
Prerequisites  A working Kubernetes cluster with internet access A GCP account A GitHub account  Installation Prow can be found in Kubernetes&amp;rsquo; test-infra repository (here). The first thing to do is to clone the repo:</description>
    </item>
    
    <item>
      <title>Vertical Pod Autoscaler Recommendation</title>
      <link>https://evanap.com/posts/vertical-pod-autoscaler-recommendation/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://evanap.com/posts/vertical-pod-autoscaler-recommendation/</guid>
      <description>Right-sizing a deployment of an app on a Kubernetes clulster is a tricky thing to do. Setting requests and limits too high, you might end up with unschedullable pods due to resource scarcity. Setting requets and limits too low and you might end up with OOMKilled pods. Luckily, there&amp;rsquo;s an answer (kind of) for that. It&amp;rsquo;s the Vertical Pod Autoscaler or VPA for short.
VPA is a custom resource, a part of autoscaling components of Kubernetes.</description>
    </item>
    
  </channel>
</rss>